RespT24B-Ap2.c

/*
 * TITULO: (COM FUNÇÃO) Resposta ETAPA A do T24
 * DATA: 28/Maio/2016
 * 
 * Disciplina: Algoritmos e Programação II

ENTREGA: ETAPA A em 27/MAIO/2016
         COMPLETO em 02/Maio/2016 antes do início da aula
         
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Objetivo deste exercício: exercitar matrizes

Até as 24h de 27/Maio de 2016 deve ser entregue no sistema a etapa A
deste código. O professor irá disponibilizar resposta para esta etapa
logo em seguida. Quem nao conseguir fazer, pode basear sua resposta
na etapa A publicada pelo professor.

Espera-se movimentação no forum para dúvidas e sugestões.

ETAPA A: criação da matriz e sua inicialização. Tudo antes da etapa de
reserva de salas.
*/


#include <stdio.h>

/* Esta é uma segunda versão da resposta: agora usando funções */

#define MAXFILA     26
#define MAXCADFILA 100

/* Função que retorna uma letra de 'A' a 'Z' correspondente ao número 0
 * a 25: 'A' para 0, 'B' para 1 e assim por diante 
 * */
char letraIndice(int i)
{
    return (65 + i);
    /* 'A' é 65 em decimal. Logo 'B' é 66 e assim por diante
     * "Baita" função!
     * */
}

/* Função para inicializar a matriz. Recebe como parâmetros:
 * - a matriz
 * - número de linhas
 * - número de colunas
 * 
 * Apesar da matriz ter, no caso, 26 linhas e 100 colunas, o que se passa
 * para a função é a quantidade de linhas válidas e a quantidade de colunas
 * da maior linha (de acordo com as especificações do T24).
 * A matriz tem 100 colunas (passados entre colchetes em int mat)
 * mas só se us col colunas. As demais estão lá, ocupando memória, mas
 * serão ignoradas.
 * */
initmatriz(int mat[][MAXCADFILA], int lin, int col)
{
    int i, j, qa;
    for (i = 0; i < lin; i++) {
        printf("Quantos assentos tem a fila %c (1 a %i)?", letraIndice(i), col);
        scanf("%i", &qa);
        if ((qa <= 0) || (qa > col)) {
            printf("Valor %i invalido. Considerando %i\n", qa, col);
        }
        /* de 0 até tamanho desta fila se coloca 0 indicando cadeira livre */
        for (j = 0; j < qa; j++) {
            mat[i][j] = 0;
        }
        /* Depois do tamanho desta fila, até o tamanho da maior fila, se
         * coloca -1 para indicar inválido (de acordo com a especificação
         * do T24)
         * */
        for (j = qa; j < col; j++) {
            mat[i][j] = -1;
        }
        /* De col até a quantidade máxima de assentos definidas na 
         * criação da matriz (MAXCADFILA) simplesmente se ignora, não
         * será usado*/
    }
}

/* Função para imprimir dados da Matriz.
 * NÃO É A IMPRESSÃO pedida no T24. Aqui, esta função, serve apenas
 * para testar a etapa A, se está correta.
 * */
int impMat(int mat[][MAXCADFILA], int lin, int col)
{
    int i, j;
    printf("\n");
    for (i = 0; i < lin; i++) {
        printf("%c = ", letraIndice(i));
        for (j = 0; j < col; j++) {
            printf("%2d ", mat[i][j]);
        }
        printf("\n");
    }
}

main()
{
    int sala[MAXFILA][MAXCADFILA];
    int qtdfila = 0;
    int tamMaiorFila = 0;

    printf("Quantas filas tem esta sala (%i MAXIMO)? ", MAXFILA);
    scanf("%i", &qtdfila);
    /* Não ficou especificado o que deve ser feito se colocar mais do que o 
     * limite. Então aceito qualquer solução (menos deixar ler mais):
     * a - ficar lendo em um laço até ser válido
     * b - assumir o máximo se a valor foi digitado errado
     * c - encerrar o programa, pois o usuário não respeitou um limite
     * Aqui eu optei em usar o b
     * */
    if ((qtdfila <= 0) || (qtdfila > MAXFILA)) {
        printf("Valor %i invalido. Assumindo %i\n", qtdfila, MAXFILA);
        qtdfila = MAXFILA;
    }

    printf("Quantos assentos tem sua maior fila (%i MAXIMO)? ", MAXCADFILA);
    scanf("%i", &tamMaiorFila);
    if ((tamMaiorFila <= 0) || (tamMaiorFila > MAXCADFILA)) {
        printf("Valor %i invalido. Assumindo %i\n", tamMaiorFila, MAXCADFILA);
        tamMaiorFila = MAXCADFILA;
    }

    /* Invocando a função que inicializa a matriz nos critérios da ETAPA A */
    initmatriz(sala, qtdfila, tamMaiorFila);

    /* Um print simples para depuracao (não faz parte do trabalho,
     * deve ser removido depois. Não coloca O ou L. Este for
     * é apenas para testar a conclusão da etapa A)
     * */
    impMat(sala, qtdfila, tamMaiorFila);
}
Generated by GNU enscript 1.6.4.